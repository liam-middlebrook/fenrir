#include "cube.h"
using namespace Fenrir;
using namespace Fenrir::Graphics;
using namespace Fenrir::Graphics::Primitives;

Cube::Cube(GLuint shaderProgram) : PrimitiveMesh(SetVertices(shaderProgram))
{}

GLuint Cube::SetVertices(GLuint shaderProgram)
{
  vertexData = new std::vector<GLfloat>();
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back( 1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back( 1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(1.0f);
  vertexData->push_back(-1.0f);
  vertexData->push_back(1.0f);
  // PrimitiveMesh::PrimitiveMesh(true);
  return shaderProgram;
}
